Board.cpp
Board.h     => 게임의 전반적인 부분을 관리하는 Board class가 선언되고 정의된 파일들이다.

Cell.cpp
Cell.h      => Board를 구성하는 Cell class가 선언되고 정의된 파일들이다.

Global.h    => 전역적으로 쓰이는 변수들인 팀, 방향, 유닛타입이 선언된 파일이다.

StatusBoard.cpp
StatusBoard.h  => Board를 출력하는 기능을 하는 StatusBoard class가 선언되고 정의된 파일들이다.

Unit.cpp
Unit.h => Cell을 구성하는 Unit이 선언되고 정의된 파일이다.

King.cpp
King.h => Unit을 구성하는 King이 선언되고 정의된 파일이다.

Laser.cpp
Laser.h => Unit을 구성하는 Laser가 선언되고 정의된 파일이다.

Mirror.cpp
Mirror.h => Unit을 구성하는 Mirror가 선언되고 정의된 파일이다.

BlockMirror.cpp
BlockMirror.h
TriMirror.cpp
TriMirror.h
HyperMirror.cpp
HyperMirror.h
BeamSplitter.cpp
BeamSplitter.h => Mirror를 구성하는 BlockMirror, TriMirror, HyperMirror, BeamSplitter가 선언되고 정의된 파일이다.

AttackLaser.cpp
AttackLaser.h
StunLaser.cpp
StunLaser.h => Laser를 구성하는 AttackLaser, StunLaser가 선언되고 정의된 파일이다.

main.cpp    => 이번 Assignment의 메인을 담당하는 파일이다.

Makefile    => make를 이용하여 쉽게 컴파일을 할 수 있게 도와주는 파일이다.
            command line에 make를 입력하면 컴파일이 되며, make chess라고 입력해도 컴파일이 된다.
            make clean도 지원하므로, command line에 make clean을 입력하면 모든 *.o 파일과 최종 
            결과 파일인 chess 파일이 삭제됨을 확인 할 수 있다. (윈도우에서는 지원하지 않는다!
            첫번째 이유는 cmd에서는 rm을 지원하지 않는다. 두번째 이유는 mingw에서 rm을 지원하긴
            하지만 리눅스에서 컴파일 된 파일은 확장자가 없는 것과 달리, 윈도우에서 컴파일 된 파
            일은 exe 확장자를 가지므로 결과 파일의 이름이 다르기 때문이다. 그러므로 clean 기능은
            리눅스에서 사용해 주길 바란다. :) )

Readme      => 현재 이용자가 읽고 있는 파일이다. 파일들에 대한 정보가 적혀있다.
